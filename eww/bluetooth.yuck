(defwindow bluetooth
  :monitor 0
  :geometry (geometry :x "30px"
                     :y "0px"
                     :width "300px"
                     :height "0px"
                     :anchor "top right")
  (eventbox :onhoverlost "eww close bluetooth"
    (w_bluetooth_window)))

(defwidget w_bluetooth_window []
  (box :class "bluetooth_window"
       :orientation "vertical"
;;    (box :class "bluetooth_buttons"
;;      (button :onclick "~/.config/scripts/bluetooth.sh toggle-power"
;;              :class "power-button"
;;        "Toggle Bluetooth")
;;      (button :onclick "~/.config/scripts/bluetooth.sh scan"
;;              :class "scan-button ${scan_status == 'scanning' ? 'scanning' : ''}"
;;        "${scan_status == 'scanning' ? 'Scanning...' : 'Scan'}"))
    (box :class "bluetooth_devices" 
         :orientation "vertical"
         :space-evenly false
      (for device in bluetooth_devices
        (w_bluetooth_device :device device)))))

(defwidget w_bluetooth_device [device]
  (button :class "bluetooth_device"
          :onclick "~/.config/scripts/bluetooth.sh toggle-connection ${device.id}"
    (box :halign "start"
         :space-evenly false
      (box :class "bluetooth_device_icon_${device.status}" 
        "ó°‚¯")
      (box :class "bluetooth_device_name" 
        {device.name}))))

(defpoll bluetooth_devices
  :interval "1s"
  :initial "[1,2]"
  `~/.config/scripts/bluetooth.sh get-devices`)

(defpoll scan_status
  :interval "1s"
  :initial "not-scanning"
  `~/.config/scripts/bluetooth.sh scan-status`)
